//C++ 支持空指针。
//NULL 指针是一个定义在标准库中的值为零的常量。
//变量声明的时候，如果没有确切的地址可以赋值，为指针变量赋一个 NULL 值是一个良好的编程习惯。
//赋为 NULL 值的指针被称为空指针。


#include <iostream>
using namespace std;

int main () {
	int  *ptr = NULL;

	cout << "ptr 的值是 " << ptr <<endl;//0

//如果所有未使用的指针都被赋予空值，同时避免使用空指针，就可以防止误用一个未初始化的指针。
//很多时候，未初始化的变量存有一些垃圾值，导致程序难以调试。


//大多数的操作系统上，程序不允许访问地址为 0 的内存，因为该内存是操作系统保留的。
//然而，内存地址 0 有特别重要的意义，它表明该指针不指向一个可访问的内存位置。
//但按照惯例，如果指针包含空值（零值），则假定它不指向任何东西。

	if(ptr)     /* 如果 ptr 非空，则完成 */		//也就是说 指针为null 默认在判断里相当于false
		cout<<1<<endl;
	if(!ptr)    /* 如果 ptr 为空，则完成 */
		cout<<2<<endl;
	return 0;//2
}
